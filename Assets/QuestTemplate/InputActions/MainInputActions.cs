//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/QuestTemplate/InputActions/Main.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace QuestBase.Input
{
    public partial class @MainInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @MainInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Main"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""109fae03-1546-485a-ade6-85341fc72eeb"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""57174778-1ec2-461a-b048-55e0feca2105"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f3093ad5-41b7-4d38-8139-6d56d4413b77"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""cd78f033-aa91-4434-8165-79c6225907f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""2185bfa1-78e2-48aa-b69c-d8f569b3bfdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""aeaa3b21-dca1-4778-8834-ec2ba6fbe5e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Retry"",
                    ""type"": ""Button"",
                    ""id"": ""cb88d15b-a31d-4e6b-9354-1f09e889f9b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Accel"",
                    ""type"": ""Button"",
                    ""id"": ""9caed09d-818f-4467-a3fb-06847c2b85a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""63b2875e-b1a0-46c9-aa24-76408e9f9139"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""e5d0a978-df3d-45c8-ad7f-a7fb251dd506"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8180e8bd-4097-4f4e-ab88-4523101a6ce9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c5327b5-f71c-4f60-99c7-4e737386f1d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e46982e-44cc-431b-9f0b-c11910bf467a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77bff152-3580-4b21-b6de-dcd0c7e41164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1635d3fe-58b6-4ba9-a4e2-f4b964f6b5c8"",
                    ""path"": ""<XRController>/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ea4d645-4504-4529-b061-ab81934c3752"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb806c76-c4a7-469c-a203-136de5e3d491"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1f7a91b-d0fd-4a62-997e-7fb9b69bf235"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c8e490b-c610-4785-884f-f04217b23ca4"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse;Touch"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e5f5442-8668-4b27-a940-df99bad7e831"",
                    ""path"": ""<Joystick>/{Hatswitch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05f6913d-c316-48b2-a6bb-e225f14c7960"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""886e731e-7071-4ae4-95c0-e61739dad6fd"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Touch"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3d0cd2-254e-47a7-a8cb-bc94d9658c54"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8255d333-5683-4943-a58a-ccb207ff1dce"",
                    ""path"": ""<XRController>/{PrimaryAction}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""647500c4-6468-4732-aac5-a993461364e3"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af28cfab-24cf-4e14-aee5-a2c6b88a3156"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96850da9-245c-423c-9c32-fc30ae99d510"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33614045-8465-4927-b8e0-dfc1116e529c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7efcc18d-d3e7-49af-8190-091a3ba912a8"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2c273a4-9d5e-4454-bcf0-b5ae07b6f047"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f71538e-a645-45da-b2cf-b317e14df42d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a05ccf74-db13-4f72-a771-4e7bc01ce047"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c74799e2-4a2b-45d3-bf48-8c115cd7e92b"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""348abab5-4bbd-4be5-96e1-19d8401d0f4b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Retry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4b1761f-24fd-4543-b0ca-d766927c2144"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Retry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64fd5a70-5992-455c-9246-451c19345466"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Retry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5a4a98d-36cd-409e-b0dc-b334d055610c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Retry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82ec9247-0960-4b0b-b9b6-681432320625"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dcb8bf3-e91d-4676-bef6-23d8485752f9"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8021e2e3-9755-4f73-a0d3-3db05f05386f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28cafbc1-24c2-403c-9aa2-3b9e5240ce63"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37693861-5b1e-4fa5-8473-e5784fa4d5cb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be2ecd12-2727-44e4-a7b7-ffc5807ecee5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ba21ca7-1b0b-4e38-8538-50bfbf4ab1e1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e35e252-f900-4d56-9589-464af11ed729"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35ab07cb-2a47-46ef-afc2-570f8de975a2"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d8e6368-1a79-4a08-adfb-338747a15be1"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f65d544c-6428-4000-be31-c02cde23ca47"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20353f12-d896-4e71-aed2-4f60dd99df0e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""49eaf585-0b4f-4e5f-9e73-9cbc3e52d60e"",
            ""actions"": [
                {
                    ""name"": ""StageSelectScroll"",
                    ""type"": ""Value"",
                    ""id"": ""7c297b71-d952-462e-ab3b-d5b39f42eda8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Setting"",
                    ""type"": ""Button"",
                    ""id"": ""e228272d-5535-4cab-bd1c-6d56a8379bee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RankingScroll"",
                    ""type"": ""Value"",
                    ""id"": ""3f82f210-0e51-4b92-b7b1-04c2616f5958"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RankingCategoryChangeNext"",
                    ""type"": ""Button"",
                    ""id"": ""b12e2af4-1bb3-47ba-89c6-94c5e52389cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RankingCategoryChangePrev"",
                    ""type"": ""Button"",
                    ""id"": ""6d8d05f9-3f82-4499-933f-a0f41cc64c66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RankingSocialChangeNext"",
                    ""type"": ""Button"",
                    ""id"": ""acdde279-ab69-4d21-952c-d15cce00095c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RankingSocialChangePrev"",
                    ""type"": ""Button"",
                    ""id"": ""e09b66f9-fa69-447c-9eb7-dd9b8628b446"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BaseSpeedNext"",
                    ""type"": ""Button"",
                    ""id"": ""8f333023-6511-4d5a-ab11-3e766f22d461"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BaseSpeedPrev"",
                    ""type"": ""Button"",
                    ""id"": ""9fafa6dc-d8f5-4a29-8f02-8cb6802dfde8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e62287f7-ed0b-4282-a037-8cf98063d828"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Joystick"",
                    ""action"": ""StageSelectScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42f5ac56-6782-4943-9121-0cfaf35950b1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Setting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b2dd935-d675-4a82-9f1b-280e3ec3a163"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Setting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64875209-7cff-4fb8-91c2-1ae755fd9054"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RankingScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20f2b1d6-2c06-4d81-b5c0-63540c4605e4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RankingCategoryChangeNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a609d737-11d3-473e-84a4-7af09f6c9037"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RankingSocialChangeNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""860e8a70-ffc8-4b72-8720-a3f857eb74dc"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RankingCategoryChangePrev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7309ccd-2310-40ec-bc5b-7feec4915d36"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RankingSocialChangePrev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca06f485-f526-45e2-9c70-015222e9aa91"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6041a399-dfa3-47d2-9b44-4b15e9cd1446"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f15cc7ae-410a-41a2-8cc6-a0e2b1ccc119"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a64dfff0-dbad-45e9-81ae-5f887b8156c8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedPrev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4aa8f54-6d4e-47ec-826c-7dadddc4c992"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedPrev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a19cd1f-8ade-4e55-b064-88f1acf834af"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BaseSpeedPrev"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Result"",
            ""id"": ""42bc9d1a-b0b9-4bd2-b424-57b782dbcf8b"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""980592f7-06c7-4dfb-b7d0-dc6e9d1855b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a679a61e-ba21-4542-91ce-a9a4bea0c5de"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""StageEditor"",
            ""id"": ""f520c620-2e61-4e7a-bc8b-c8872e34e619"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Value"",
                    ""id"": ""febf195c-7e50-44fd-a7b4-5e311bb24928"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""958ec407-ea73-483a-9a1c-1ff64286a3f9"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53896b27-742f-4180-aeef-a826e5d03d8a"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Common"",
            ""id"": ""417868b9-d4c6-4e36-95d2-8d5e0c2be9e3"",
            ""actions"": [
                {
                    ""name"": ""AnyMouseInput"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2173eb90-7c30-4492-bc7f-1f9778b75a89"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AnyKeyboardInput"",
                    ""type"": ""Value"",
                    ""id"": ""7fbf773e-9aa6-45b8-9004-65b7ce9a6213"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AnyGamepadInput"",
                    ""type"": ""Value"",
                    ""id"": ""fbc178ec-a56b-4c80-a576-df6f1bf6f282"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""53830280-3617-4d07-aa55-d9f2570ef333"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b0a21631-e731-4b0f-9a92-c540cd712b5f"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyMouseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1cc5ed2-30b6-46e6-9171-1aea7d7b6801"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyKeyboardInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60ff4096-e2ec-43b6-9757-29c92fe5decd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4ed40de-e5ee-416f-a7ff-145151149f3f"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0441e2cb-c5b2-4db1-a042-ebacdeedd4b2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0744de13-ddf5-4605-a9ca-37116f97ec58"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c838e898-f391-4945-817f-554fb08906d3"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd978a87-174b-4952-b016-8c16b5dcca0f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ceafc35-91fa-438e-9882-7289b1dd8f4c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e847301a-065e-4005-a111-5051ea2a60b8"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e642ba2-00de-4fde-b8d0-abfeedf4e565"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""093703e2-22ee-45ce-8ece-48360b9b2a7e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93a9156d-a9b6-4b43-a24e-f66bf7706236"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9be19b0b-fceb-4c01-af2b-84132fd134d9"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65bd3b99-f361-438a-9e67-571f1f0d49c6"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""279c8227-8d85-48e5-8bcd-a2460d52aca6"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""158cd069-605b-404b-8a62-48af0e11e058"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnyGamepadInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86c36799-3e1a-4be5-817e-8b2bf5f333ee"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Tutorial"",
            ""id"": ""c6e3f7d9-6bb8-4b5a-b792-09a6dbeccd95"",
            ""actions"": [
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""828d015c-cea7-401f-a711-45e91c6a73a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e923a01a-0c46-47d4-9ce6-565cedf6cf78"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b459e77-a522-4414-b26c-3edd06c68b54"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02e2c091-4ff3-42a0-be25-7cd3ec464808"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // InGame
            m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
            m_InGame_Move = m_InGame.FindAction("Move", throwIfNotFound: true);
            m_InGame_Look = m_InGame.FindAction("Look", throwIfNotFound: true);
            m_InGame_Fire = m_InGame.FindAction("Fire", throwIfNotFound: true);
            m_InGame_Pause = m_InGame.FindAction("Pause", throwIfNotFound: true);
            m_InGame_Dash = m_InGame.FindAction("Dash", throwIfNotFound: true);
            m_InGame_Retry = m_InGame.FindAction("Retry", throwIfNotFound: true);
            m_InGame_Accel = m_InGame.FindAction("Accel", throwIfNotFound: true);
            m_InGame_Brake = m_InGame.FindAction("Brake", throwIfNotFound: true);
            m_InGame_CameraZoom = m_InGame.FindAction("CameraZoom", throwIfNotFound: true);
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_StageSelectScroll = m_Menu.FindAction("StageSelectScroll", throwIfNotFound: true);
            m_Menu_Setting = m_Menu.FindAction("Setting", throwIfNotFound: true);
            m_Menu_RankingScroll = m_Menu.FindAction("RankingScroll", throwIfNotFound: true);
            m_Menu_RankingCategoryChangeNext = m_Menu.FindAction("RankingCategoryChangeNext", throwIfNotFound: true);
            m_Menu_RankingCategoryChangePrev = m_Menu.FindAction("RankingCategoryChangePrev", throwIfNotFound: true);
            m_Menu_RankingSocialChangeNext = m_Menu.FindAction("RankingSocialChangeNext", throwIfNotFound: true);
            m_Menu_RankingSocialChangePrev = m_Menu.FindAction("RankingSocialChangePrev", throwIfNotFound: true);
            m_Menu_BaseSpeedNext = m_Menu.FindAction("BaseSpeedNext", throwIfNotFound: true);
            m_Menu_BaseSpeedPrev = m_Menu.FindAction("BaseSpeedPrev", throwIfNotFound: true);
            // Result
            m_Result = asset.FindActionMap("Result", throwIfNotFound: true);
            m_Result_Newaction = m_Result.FindAction("New action", throwIfNotFound: true);
            // StageEditor
            m_StageEditor = asset.FindActionMap("StageEditor", throwIfNotFound: true);
            m_StageEditor_Newaction = m_StageEditor.FindAction("New action", throwIfNotFound: true);
            // Common
            m_Common = asset.FindActionMap("Common", throwIfNotFound: true);
            m_Common_AnyMouseInput = m_Common.FindAction("AnyMouseInput", throwIfNotFound: true);
            m_Common_AnyKeyboardInput = m_Common.FindAction("AnyKeyboardInput", throwIfNotFound: true);
            m_Common_AnyGamepadInput = m_Common.FindAction("AnyGamepadInput", throwIfNotFound: true);
            m_Common_MousePosition = m_Common.FindAction("MousePosition", throwIfNotFound: true);
            // Tutorial
            m_Tutorial = asset.FindActionMap("Tutorial", throwIfNotFound: true);
            m_Tutorial_Submit = m_Tutorial.FindAction("Submit", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // InGame
        private readonly InputActionMap m_InGame;
        private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
        private readonly InputAction m_InGame_Move;
        private readonly InputAction m_InGame_Look;
        private readonly InputAction m_InGame_Fire;
        private readonly InputAction m_InGame_Pause;
        private readonly InputAction m_InGame_Dash;
        private readonly InputAction m_InGame_Retry;
        private readonly InputAction m_InGame_Accel;
        private readonly InputAction m_InGame_Brake;
        private readonly InputAction m_InGame_CameraZoom;
        public struct InGameActions
        {
            private @MainInputActions m_Wrapper;
            public InGameActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_InGame_Move;
            public InputAction @Look => m_Wrapper.m_InGame_Look;
            public InputAction @Fire => m_Wrapper.m_InGame_Fire;
            public InputAction @Pause => m_Wrapper.m_InGame_Pause;
            public InputAction @Dash => m_Wrapper.m_InGame_Dash;
            public InputAction @Retry => m_Wrapper.m_InGame_Retry;
            public InputAction @Accel => m_Wrapper.m_InGame_Accel;
            public InputAction @Brake => m_Wrapper.m_InGame_Brake;
            public InputAction @CameraZoom => m_Wrapper.m_InGame_CameraZoom;
            public InputActionMap Get() { return m_Wrapper.m_InGame; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
            public void AddCallbacks(IInGameActions instance)
            {
                if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Retry.started += instance.OnRetry;
                @Retry.performed += instance.OnRetry;
                @Retry.canceled += instance.OnRetry;
                @Accel.started += instance.OnAccel;
                @Accel.performed += instance.OnAccel;
                @Accel.canceled += instance.OnAccel;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @CameraZoom.started += instance.OnCameraZoom;
                @CameraZoom.performed += instance.OnCameraZoom;
                @CameraZoom.canceled += instance.OnCameraZoom;
            }

            private void UnregisterCallbacks(IInGameActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Look.started -= instance.OnLook;
                @Look.performed -= instance.OnLook;
                @Look.canceled -= instance.OnLook;
                @Fire.started -= instance.OnFire;
                @Fire.performed -= instance.OnFire;
                @Fire.canceled -= instance.OnFire;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @Dash.started -= instance.OnDash;
                @Dash.performed -= instance.OnDash;
                @Dash.canceled -= instance.OnDash;
                @Retry.started -= instance.OnRetry;
                @Retry.performed -= instance.OnRetry;
                @Retry.canceled -= instance.OnRetry;
                @Accel.started -= instance.OnAccel;
                @Accel.performed -= instance.OnAccel;
                @Accel.canceled -= instance.OnAccel;
                @Brake.started -= instance.OnBrake;
                @Brake.performed -= instance.OnBrake;
                @Brake.canceled -= instance.OnBrake;
                @CameraZoom.started -= instance.OnCameraZoom;
                @CameraZoom.performed -= instance.OnCameraZoom;
                @CameraZoom.canceled -= instance.OnCameraZoom;
            }

            public void RemoveCallbacks(IInGameActions instance)
            {
                if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IInGameActions instance)
            {
                foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public InGameActions @InGame => new InGameActions(this);

        // Menu
        private readonly InputActionMap m_Menu;
        private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
        private readonly InputAction m_Menu_StageSelectScroll;
        private readonly InputAction m_Menu_Setting;
        private readonly InputAction m_Menu_RankingScroll;
        private readonly InputAction m_Menu_RankingCategoryChangeNext;
        private readonly InputAction m_Menu_RankingCategoryChangePrev;
        private readonly InputAction m_Menu_RankingSocialChangeNext;
        private readonly InputAction m_Menu_RankingSocialChangePrev;
        private readonly InputAction m_Menu_BaseSpeedNext;
        private readonly InputAction m_Menu_BaseSpeedPrev;
        public struct MenuActions
        {
            private @MainInputActions m_Wrapper;
            public MenuActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @StageSelectScroll => m_Wrapper.m_Menu_StageSelectScroll;
            public InputAction @Setting => m_Wrapper.m_Menu_Setting;
            public InputAction @RankingScroll => m_Wrapper.m_Menu_RankingScroll;
            public InputAction @RankingCategoryChangeNext => m_Wrapper.m_Menu_RankingCategoryChangeNext;
            public InputAction @RankingCategoryChangePrev => m_Wrapper.m_Menu_RankingCategoryChangePrev;
            public InputAction @RankingSocialChangeNext => m_Wrapper.m_Menu_RankingSocialChangeNext;
            public InputAction @RankingSocialChangePrev => m_Wrapper.m_Menu_RankingSocialChangePrev;
            public InputAction @BaseSpeedNext => m_Wrapper.m_Menu_BaseSpeedNext;
            public InputAction @BaseSpeedPrev => m_Wrapper.m_Menu_BaseSpeedPrev;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void AddCallbacks(IMenuActions instance)
            {
                if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
                @StageSelectScroll.started += instance.OnStageSelectScroll;
                @StageSelectScroll.performed += instance.OnStageSelectScroll;
                @StageSelectScroll.canceled += instance.OnStageSelectScroll;
                @Setting.started += instance.OnSetting;
                @Setting.performed += instance.OnSetting;
                @Setting.canceled += instance.OnSetting;
                @RankingScroll.started += instance.OnRankingScroll;
                @RankingScroll.performed += instance.OnRankingScroll;
                @RankingScroll.canceled += instance.OnRankingScroll;
                @RankingCategoryChangeNext.started += instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangeNext.performed += instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangeNext.canceled += instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangePrev.started += instance.OnRankingCategoryChangePrev;
                @RankingCategoryChangePrev.performed += instance.OnRankingCategoryChangePrev;
                @RankingCategoryChangePrev.canceled += instance.OnRankingCategoryChangePrev;
                @RankingSocialChangeNext.started += instance.OnRankingSocialChangeNext;
                @RankingSocialChangeNext.performed += instance.OnRankingSocialChangeNext;
                @RankingSocialChangeNext.canceled += instance.OnRankingSocialChangeNext;
                @RankingSocialChangePrev.started += instance.OnRankingSocialChangePrev;
                @RankingSocialChangePrev.performed += instance.OnRankingSocialChangePrev;
                @RankingSocialChangePrev.canceled += instance.OnRankingSocialChangePrev;
                @BaseSpeedNext.started += instance.OnBaseSpeedNext;
                @BaseSpeedNext.performed += instance.OnBaseSpeedNext;
                @BaseSpeedNext.canceled += instance.OnBaseSpeedNext;
                @BaseSpeedPrev.started += instance.OnBaseSpeedPrev;
                @BaseSpeedPrev.performed += instance.OnBaseSpeedPrev;
                @BaseSpeedPrev.canceled += instance.OnBaseSpeedPrev;
            }

            private void UnregisterCallbacks(IMenuActions instance)
            {
                @StageSelectScroll.started -= instance.OnStageSelectScroll;
                @StageSelectScroll.performed -= instance.OnStageSelectScroll;
                @StageSelectScroll.canceled -= instance.OnStageSelectScroll;
                @Setting.started -= instance.OnSetting;
                @Setting.performed -= instance.OnSetting;
                @Setting.canceled -= instance.OnSetting;
                @RankingScroll.started -= instance.OnRankingScroll;
                @RankingScroll.performed -= instance.OnRankingScroll;
                @RankingScroll.canceled -= instance.OnRankingScroll;
                @RankingCategoryChangeNext.started -= instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangeNext.performed -= instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangeNext.canceled -= instance.OnRankingCategoryChangeNext;
                @RankingCategoryChangePrev.started -= instance.OnRankingCategoryChangePrev;
                @RankingCategoryChangePrev.performed -= instance.OnRankingCategoryChangePrev;
                @RankingCategoryChangePrev.canceled -= instance.OnRankingCategoryChangePrev;
                @RankingSocialChangeNext.started -= instance.OnRankingSocialChangeNext;
                @RankingSocialChangeNext.performed -= instance.OnRankingSocialChangeNext;
                @RankingSocialChangeNext.canceled -= instance.OnRankingSocialChangeNext;
                @RankingSocialChangePrev.started -= instance.OnRankingSocialChangePrev;
                @RankingSocialChangePrev.performed -= instance.OnRankingSocialChangePrev;
                @RankingSocialChangePrev.canceled -= instance.OnRankingSocialChangePrev;
                @BaseSpeedNext.started -= instance.OnBaseSpeedNext;
                @BaseSpeedNext.performed -= instance.OnBaseSpeedNext;
                @BaseSpeedNext.canceled -= instance.OnBaseSpeedNext;
                @BaseSpeedPrev.started -= instance.OnBaseSpeedPrev;
                @BaseSpeedPrev.performed -= instance.OnBaseSpeedPrev;
                @BaseSpeedPrev.canceled -= instance.OnBaseSpeedPrev;
            }

            public void RemoveCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMenuActions instance)
            {
                foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MenuActions @Menu => new MenuActions(this);

        // Result
        private readonly InputActionMap m_Result;
        private List<IResultActions> m_ResultActionsCallbackInterfaces = new List<IResultActions>();
        private readonly InputAction m_Result_Newaction;
        public struct ResultActions
        {
            private @MainInputActions m_Wrapper;
            public ResultActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Newaction => m_Wrapper.m_Result_Newaction;
            public InputActionMap Get() { return m_Wrapper.m_Result; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ResultActions set) { return set.Get(); }
            public void AddCallbacks(IResultActions instance)
            {
                if (instance == null || m_Wrapper.m_ResultActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ResultActionsCallbackInterfaces.Add(instance);
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }

            private void UnregisterCallbacks(IResultActions instance)
            {
                @Newaction.started -= instance.OnNewaction;
                @Newaction.performed -= instance.OnNewaction;
                @Newaction.canceled -= instance.OnNewaction;
            }

            public void RemoveCallbacks(IResultActions instance)
            {
                if (m_Wrapper.m_ResultActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IResultActions instance)
            {
                foreach (var item in m_Wrapper.m_ResultActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ResultActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ResultActions @Result => new ResultActions(this);

        // StageEditor
        private readonly InputActionMap m_StageEditor;
        private List<IStageEditorActions> m_StageEditorActionsCallbackInterfaces = new List<IStageEditorActions>();
        private readonly InputAction m_StageEditor_Newaction;
        public struct StageEditorActions
        {
            private @MainInputActions m_Wrapper;
            public StageEditorActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Newaction => m_Wrapper.m_StageEditor_Newaction;
            public InputActionMap Get() { return m_Wrapper.m_StageEditor; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(StageEditorActions set) { return set.Get(); }
            public void AddCallbacks(IStageEditorActions instance)
            {
                if (instance == null || m_Wrapper.m_StageEditorActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_StageEditorActionsCallbackInterfaces.Add(instance);
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }

            private void UnregisterCallbacks(IStageEditorActions instance)
            {
                @Newaction.started -= instance.OnNewaction;
                @Newaction.performed -= instance.OnNewaction;
                @Newaction.canceled -= instance.OnNewaction;
            }

            public void RemoveCallbacks(IStageEditorActions instance)
            {
                if (m_Wrapper.m_StageEditorActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IStageEditorActions instance)
            {
                foreach (var item in m_Wrapper.m_StageEditorActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_StageEditorActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public StageEditorActions @StageEditor => new StageEditorActions(this);

        // Common
        private readonly InputActionMap m_Common;
        private List<ICommonActions> m_CommonActionsCallbackInterfaces = new List<ICommonActions>();
        private readonly InputAction m_Common_AnyMouseInput;
        private readonly InputAction m_Common_AnyKeyboardInput;
        private readonly InputAction m_Common_AnyGamepadInput;
        private readonly InputAction m_Common_MousePosition;
        public struct CommonActions
        {
            private @MainInputActions m_Wrapper;
            public CommonActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @AnyMouseInput => m_Wrapper.m_Common_AnyMouseInput;
            public InputAction @AnyKeyboardInput => m_Wrapper.m_Common_AnyKeyboardInput;
            public InputAction @AnyGamepadInput => m_Wrapper.m_Common_AnyGamepadInput;
            public InputAction @MousePosition => m_Wrapper.m_Common_MousePosition;
            public InputActionMap Get() { return m_Wrapper.m_Common; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CommonActions set) { return set.Get(); }
            public void AddCallbacks(ICommonActions instance)
            {
                if (instance == null || m_Wrapper.m_CommonActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CommonActionsCallbackInterfaces.Add(instance);
                @AnyMouseInput.started += instance.OnAnyMouseInput;
                @AnyMouseInput.performed += instance.OnAnyMouseInput;
                @AnyMouseInput.canceled += instance.OnAnyMouseInput;
                @AnyKeyboardInput.started += instance.OnAnyKeyboardInput;
                @AnyKeyboardInput.performed += instance.OnAnyKeyboardInput;
                @AnyKeyboardInput.canceled += instance.OnAnyKeyboardInput;
                @AnyGamepadInput.started += instance.OnAnyGamepadInput;
                @AnyGamepadInput.performed += instance.OnAnyGamepadInput;
                @AnyGamepadInput.canceled += instance.OnAnyGamepadInput;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
            }

            private void UnregisterCallbacks(ICommonActions instance)
            {
                @AnyMouseInput.started -= instance.OnAnyMouseInput;
                @AnyMouseInput.performed -= instance.OnAnyMouseInput;
                @AnyMouseInput.canceled -= instance.OnAnyMouseInput;
                @AnyKeyboardInput.started -= instance.OnAnyKeyboardInput;
                @AnyKeyboardInput.performed -= instance.OnAnyKeyboardInput;
                @AnyKeyboardInput.canceled -= instance.OnAnyKeyboardInput;
                @AnyGamepadInput.started -= instance.OnAnyGamepadInput;
                @AnyGamepadInput.performed -= instance.OnAnyGamepadInput;
                @AnyGamepadInput.canceled -= instance.OnAnyGamepadInput;
                @MousePosition.started -= instance.OnMousePosition;
                @MousePosition.performed -= instance.OnMousePosition;
                @MousePosition.canceled -= instance.OnMousePosition;
            }

            public void RemoveCallbacks(ICommonActions instance)
            {
                if (m_Wrapper.m_CommonActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICommonActions instance)
            {
                foreach (var item in m_Wrapper.m_CommonActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CommonActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CommonActions @Common => new CommonActions(this);

        // Tutorial
        private readonly InputActionMap m_Tutorial;
        private List<ITutorialActions> m_TutorialActionsCallbackInterfaces = new List<ITutorialActions>();
        private readonly InputAction m_Tutorial_Submit;
        public struct TutorialActions
        {
            private @MainInputActions m_Wrapper;
            public TutorialActions(@MainInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Submit => m_Wrapper.m_Tutorial_Submit;
            public InputActionMap Get() { return m_Wrapper.m_Tutorial; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TutorialActions set) { return set.Get(); }
            public void AddCallbacks(ITutorialActions instance)
            {
                if (instance == null || m_Wrapper.m_TutorialActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_TutorialActionsCallbackInterfaces.Add(instance);
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
            }

            private void UnregisterCallbacks(ITutorialActions instance)
            {
                @Submit.started -= instance.OnSubmit;
                @Submit.performed -= instance.OnSubmit;
                @Submit.canceled -= instance.OnSubmit;
            }

            public void RemoveCallbacks(ITutorialActions instance)
            {
                if (m_Wrapper.m_TutorialActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ITutorialActions instance)
            {
                foreach (var item in m_Wrapper.m_TutorialActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_TutorialActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public TutorialActions @Tutorial => new TutorialActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_TouchSchemeIndex = -1;
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        private int m_JoystickSchemeIndex = -1;
        public InputControlScheme JoystickScheme
        {
            get
            {
                if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
                return asset.controlSchemes[m_JoystickSchemeIndex];
            }
        }
        private int m_XRSchemeIndex = -1;
        public InputControlScheme XRScheme
        {
            get
            {
                if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
                return asset.controlSchemes[m_XRSchemeIndex];
            }
        }
        public interface IInGameActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnFire(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
            void OnRetry(InputAction.CallbackContext context);
            void OnAccel(InputAction.CallbackContext context);
            void OnBrake(InputAction.CallbackContext context);
            void OnCameraZoom(InputAction.CallbackContext context);
        }
        public interface IMenuActions
        {
            void OnStageSelectScroll(InputAction.CallbackContext context);
            void OnSetting(InputAction.CallbackContext context);
            void OnRankingScroll(InputAction.CallbackContext context);
            void OnRankingCategoryChangeNext(InputAction.CallbackContext context);
            void OnRankingCategoryChangePrev(InputAction.CallbackContext context);
            void OnRankingSocialChangeNext(InputAction.CallbackContext context);
            void OnRankingSocialChangePrev(InputAction.CallbackContext context);
            void OnBaseSpeedNext(InputAction.CallbackContext context);
            void OnBaseSpeedPrev(InputAction.CallbackContext context);
        }
        public interface IResultActions
        {
            void OnNewaction(InputAction.CallbackContext context);
        }
        public interface IStageEditorActions
        {
            void OnNewaction(InputAction.CallbackContext context);
        }
        public interface ICommonActions
        {
            void OnAnyMouseInput(InputAction.CallbackContext context);
            void OnAnyKeyboardInput(InputAction.CallbackContext context);
            void OnAnyGamepadInput(InputAction.CallbackContext context);
            void OnMousePosition(InputAction.CallbackContext context);
        }
        public interface ITutorialActions
        {
            void OnSubmit(InputAction.CallbackContext context);
        }
    }
}
